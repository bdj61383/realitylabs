%div.hero
  %div.hero_inset_image
    %h1.league_header Create New User

    = form_tag users_path, :id => "new_user" do
      %div.hero_left.new_user_hero_div
        %div.opacity
          %h2.league_subheader#user_subheader User Info
          %p.description#user_description You'll log in for future visits with your username and password.  We ask for your email in case you need to reset your password.
          %p.league_field
            = label :user, :username, 'Username', :class => "league_label name_label"
            %span#check_username_response.check_username_response 
            = text_field :user, :username, :class => "league_input required", :maxlength => "15"

          %p.league_field
            = label :user, :password, 'Password', :class => "league_label"
            = password_field :user, :password, :class => "league_input required"

          %p.league_field
            = label :user, :password_confirmation, 'Confirm Password', :class => "league_label"
            = password_field :user, :password_confirmation, :class => "league_input required"

          %p.league_field
            = label :user, :email, 'Email', :class => "league_label"
            = email_field :user, :email, :class => "league_input required" 

      %div.hero_right.new_user_hero_div
        %div.opacity
          %h2.league_subheader#league_subheader League Info
          %p.description#league_description Please enter the name and confirmation code of the league you are joining.  This info can be found in the email you received or from your friend who created the league.  
          %p.league_field
            = label :league, :name, 'League Name', :class => "league_label"
            = text_field :league, :name, :class => "league_input required", :value => @league_name

          %p.league_field
            = label :league, :confirmation_code, 'League Code', :class => "league_label"
            = text_field :league, :confirmation_code, :class => "league_input required", :value => @league_code
          = submit_tag 'Create New User', :disabled => false, :class => "new_league_submit new_user_submit"
      %div.clear
      %div= @params

      / = submit_tag 'Create New User', :class => "new_league_submit new_user_submit"

:javascript
  $(document).ready(function(){
    $('#league_subheader').on('mouseover', function(){
      $('#league_description').css('display', 'block')
    });
    $('#league_subheader').on('mouseout', function(){
      $('#league_description').css('display', 'none')
    });

    $('#user_subheader').on('mouseover', function(){
      $('#user_description').css('display', 'block')
    });
    $('#user_subheader').on('mouseout', function(){
      $('#user_description').css('display', 'none')
    });

    // This calls front-end validation on the form using the jQuery validate plugin
    $('#new_user').validate()

    // This checks the availability of the username in realtime
    $('#user_username').change(function(){
      var username = $(this).val()
      $.ajax({
          type: "POST", 
          url: "check_username", 
          data: {new_name: username},
          dataType: 'script',
          success: function(){
            var str = $('#user_username').val()
            var pat = /^[a-z0-9\-]+$/
            // This makes it impossible to submit the form if the username is not available
            if ($('#check_username_response').text() == "already taken") {
              $('.new_user_submit').attr('disabled', true)
            }
            else if (pat.test(str) == false) {
              $('#check_username_response').text('no spaces, letters and numbers only').addClass('username_unavailable').removeClass('username_available')
              $('.new_user_submit').attr('disabled', true)
            }
            else {
              $('.new_user_submit').attr('disabled', false)
            }

          }
      });
    });


  });

    


